#toydata in GOplot
#data(EC)




 View(circ)
 k1<-read.csv("DV.csv",sep = ",",header = TRUE)
 k2<-read.csv("gene.csv",sep = ",",header = TRUE)
  colnames(k2)<-c('ID','baseMean','logFC','lfcSE','stat','P.Value','adj.P.Val')
 circ<-circle_dat(k1,k2)
View(circ)
kk<-read.csv("term.csv",sep = ",",header = TRUE)
chord <- chord_dat(circ, k1$genes, kk$Term)
GOChord(chord, space = 0.02, gene.order = 'logFC', gene.space = 0.25, gene.size = 3)


###################################################################################################
k1<-read.csv("G3/DV13.csv",sep = ",",header = TRUE)
k2<-read.csv("G3/group3vsgroup2.csv",sep = ",",header = TRUE)
k3<-read.csv("G3/Gene13.csv",sep = ",",header = TRUE)
k4<-read.csv("G3/process.csv",sep = ",",header = TRUE)
circ<-circle_dat(k1,k2)
 circ2<-circ %>% arrange(desc(count))
  circ3<-subset(circ2, circ$count>=2)
 GOCircle(circ2,nsub = 10)

chord <- chord_dat(data = circ, genes = k3, process = k4$Term)
GOChord(chord, space = 0.02, gene.order = 'logFC', gene.space = 0.25, gene.size = 3,limit = c(1,2))


kk<-c('metabolic process',	'catalytic activity',	'phosphopantetheine binding',	'transferase activity',	'hydrolase activity',	'membrane',	'integral component of membrane',	'oxidation-reduction process',	'proteolysis',	'metallopeptidase activity',	'metalloendopeptidase activity',	'metal ion binding',	'protein binding',	'carbohydrate metabolic process',	'cell wall',	'fungal-type cell wall',	'structural constituent of cell wall',	'extracellular region',	'pathogenesis',	'nucleic acid binding')

GOCluster(circ, kk2, clust.by = 'term', term.width = 2)

#########################################################################################################
library(GOplot)
library(dplyr)
setwd('Dropbox/test2/test3/Vennlog1/new/test/Goplot/Goplot/Group3/G1/')
k1<-read.csv("DV-G1.csv",sep = ",",header = TRUE)
k2<-read.csv("group1vsgroup2.csv")
k3<-read.csv("G1V2.csv")
k4<-read.csv("process-effector-1.csv",sep = ",",header = FALSE)
circ<-circle_dat(k1,k2)
circ2<-circ %>% arrange(desc(count))

write.csv(as.data.frame(circ),file = paste("circ1V2",".csv",sep = ""))

kk<-read.csv("circ_G1V2_filter_effector_level3.csv",sep = ",",header = FALSE)
colnames(kk)<-(c("","category","ID","term","count","genes","logFC","adj_pval","zscore"))

 kk<-kk[,-1]
 kk2<-kk %>% arrange(desc(count))
 GOCircle(kk2,nsub = 5)

chord <- chord_dat(data = circ2, genes = k3, process = k4$V2)
GOChord(chord, space = 0.02, gene.order = 'logFC', gene.space = 0.25, gene.size = 3,limit = c(1,2))
